{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import pickle\n",
    "import matplotlib.pyplot as plt "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv(\"cc_merged_0412.csv\",sep='\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>index</th>\n",
       "      <th>year</th>\n",
       "      <th>caseid</th>\n",
       "      <th>opinion_type</th>\n",
       "      <th>judge_name</th>\n",
       "      <th>decision</th>\n",
       "      <th>date</th>\n",
       "      <th>Author</th>\n",
       "      <th>Affirmed</th>\n",
       "      <th>...</th>\n",
       "      <th>suffix</th>\n",
       "      <th>month_3</th>\n",
       "      <th>length_3m</th>\n",
       "      <th>month_6</th>\n",
       "      <th>length_6m</th>\n",
       "      <th>month_3m_b</th>\n",
       "      <th>month_3_b</th>\n",
       "      <th>length_3m_dif</th>\n",
       "      <th>txt</th>\n",
       "      <th>x_dem_p</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2304</td>\n",
       "      <td>1993</td>\n",
       "      <td>X35807</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>PER CURIAM</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1993-08-04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td>1993-11-04</td>\n",
       "      <td>49.758998</td>\n",
       "      <td>1994-02-04</td>\n",
       "      <td>49.603455</td>\n",
       "      <td>1993-05-04</td>\n",
       "      <td>1993-05-04</td>\n",
       "      <td>-1.099144</td>\n",
       "      <td>per curiam: charo appeals his sentence for co...</td>\n",
       "      <td>0.292902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2796</td>\n",
       "      <td>1992</td>\n",
       "      <td>X3AD9D</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>LOGAN</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1992-11-13</td>\n",
       "      <td>LOGAN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1993-02-13</td>\n",
       "      <td>52.334119</td>\n",
       "      <td>1993-05-13</td>\n",
       "      <td>51.257239</td>\n",
       "      <td>1992-08-13</td>\n",
       "      <td>1992-08-13</td>\n",
       "      <td>1.663181</td>\n",
       "      <td>logan , circuit judge. the only issue in this...</td>\n",
       "      <td>0.328425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2805</td>\n",
       "      <td>1992</td>\n",
       "      <td>X3ADTB</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>LOGAN</td>\n",
       "      <td>reversed</td>\n",
       "      <td>1992-12-29</td>\n",
       "      <td>LOGAN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1993-03-29</td>\n",
       "      <td>50.282495</td>\n",
       "      <td>1993-06-29</td>\n",
       "      <td>51.134191</td>\n",
       "      <td>1992-09-29</td>\n",
       "      <td>1992-09-29</td>\n",
       "      <td>-3.563471</td>\n",
       "      <td>logan , circuit judge. defendant bernard d. r...</td>\n",
       "      <td>0.328425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2814</td>\n",
       "      <td>1997</td>\n",
       "      <td>X37GPR</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>JOHN C</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1997-02-11</td>\n",
       "      <td>PORFILIO</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1997-05-11</td>\n",
       "      <td>51.570342</td>\n",
       "      <td>1997-08-11</td>\n",
       "      <td>51.983779</td>\n",
       "      <td>1996-11-11</td>\n",
       "      <td>1996-11-11</td>\n",
       "      <td>0.760434</td>\n",
       "      <td>john c. porfilio , circuit judge. defendant b...</td>\n",
       "      <td>0.360773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2816</td>\n",
       "      <td>1999</td>\n",
       "      <td>X4QAM7</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1999-01-04</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1999-04-04</td>\n",
       "      <td>59.568882</td>\n",
       "      <td>1999-07-04</td>\n",
       "      <td>59.854130</td>\n",
       "      <td>1998-10-04</td>\n",
       "      <td>1998-10-04</td>\n",
       "      <td>-0.630426</td>\n",
       "      <td>holloway , circuit judge. mr. unser brings th...</td>\n",
       "      <td>0.411135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>2817</td>\n",
       "      <td>1998</td>\n",
       "      <td>XN5ACRQNB5G0</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>JOHN C</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1998-02-23</td>\n",
       "      <td>PORFILIO</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1998-05-23</td>\n",
       "      <td>63.292860</td>\n",
       "      <td>1998-08-23</td>\n",
       "      <td>61.762051</td>\n",
       "      <td>1997-11-23</td>\n",
       "      <td>1997-11-23</td>\n",
       "      <td>3.591201</td>\n",
       "      <td>john c. porfilio , circuit judge. these three...</td>\n",
       "      <td>0.399229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>2819</td>\n",
       "      <td>1991</td>\n",
       "      <td>X57EQB</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>JOHN P</td>\n",
       "      <td>reversed</td>\n",
       "      <td>1991-12-17</td>\n",
       "      <td>MOORE</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1992-03-17</td>\n",
       "      <td>50.717301</td>\n",
       "      <td>1992-06-17</td>\n",
       "      <td>50.744294</td>\n",
       "      <td>1991-09-17</td>\n",
       "      <td>1991-09-17</td>\n",
       "      <td>1.751541</td>\n",
       "      <td>john p. moore , circuit judge. james l. norma...</td>\n",
       "      <td>0.350113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>2820</td>\n",
       "      <td>1991</td>\n",
       "      <td>XAC38F</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>BRORBY</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1991-12-31</td>\n",
       "      <td>BRORBY</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1992-03-31</td>\n",
       "      <td>49.808413</td>\n",
       "      <td>1992-06-30</td>\n",
       "      <td>50.642475</td>\n",
       "      <td>1991-09-30</td>\n",
       "      <td>1991-09-30</td>\n",
       "      <td>0.303059</td>\n",
       "      <td>brorby , circuit judge. defendant juan dozal-...</td>\n",
       "      <td>0.350113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>2821</td>\n",
       "      <td>1995</td>\n",
       "      <td>X4NT3Q</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1995-10-18</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1996-01-18</td>\n",
       "      <td>50.519827</td>\n",
       "      <td>1996-04-18</td>\n",
       "      <td>51.128395</td>\n",
       "      <td>1995-07-18</td>\n",
       "      <td>1995-07-18</td>\n",
       "      <td>-0.039012</td>\n",
       "      <td>holloway , circuit judge. petitioner-appellan...</td>\n",
       "      <td>0.341123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>2822</td>\n",
       "      <td>2000</td>\n",
       "      <td>X3FBF1</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>TACHA</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>2000-04-04</td>\n",
       "      <td>TACHA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>2000-07-04</td>\n",
       "      <td>59.489909</td>\n",
       "      <td>2000-10-04</td>\n",
       "      <td>59.785273</td>\n",
       "      <td>2000-01-04</td>\n",
       "      <td>2000-01-04</td>\n",
       "      <td>-1.213819</td>\n",
       "      <td>tacha , circuit judge. defendant tony smith a...</td>\n",
       "      <td>0.440144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>2823</td>\n",
       "      <td>1998</td>\n",
       "      <td>X369TF</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>EBEL</td>\n",
       "      <td>reversed</td>\n",
       "      <td>1998-09-18</td>\n",
       "      <td>EBEL</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1998-12-18</td>\n",
       "      <td>61.202553</td>\n",
       "      <td>1999-03-18</td>\n",
       "      <td>60.579140</td>\n",
       "      <td>1998-06-18</td>\n",
       "      <td>1998-06-18</td>\n",
       "      <td>0.911760</td>\n",
       "      <td>ebel , circuit judge. manuel coronado-cervant...</td>\n",
       "      <td>0.399229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>2824</td>\n",
       "      <td>2001</td>\n",
       "      <td>X50L71</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>PAUL KELLY</td>\n",
       "      <td>reversed</td>\n",
       "      <td>2001-03-22</td>\n",
       "      <td>KELLY</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>2001-06-22</td>\n",
       "      <td>60.074257</td>\n",
       "      <td>2001-09-22</td>\n",
       "      <td>60.182141</td>\n",
       "      <td>2000-12-22</td>\n",
       "      <td>2000-12-22</td>\n",
       "      <td>0.675637</td>\n",
       "      <td>paul kelly, jr. , circuit judge. defendant-ap...</td>\n",
       "      <td>0.450312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>2829</td>\n",
       "      <td>1992</td>\n",
       "      <td>X321KN</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>LOGAN</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1992-02-18</td>\n",
       "      <td>LOGAN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1992-05-18</td>\n",
       "      <td>49.651231</td>\n",
       "      <td>1992-08-18</td>\n",
       "      <td>50.409258</td>\n",
       "      <td>1991-11-18</td>\n",
       "      <td>1991-11-18</td>\n",
       "      <td>-0.972865</td>\n",
       "      <td>logan , circuit judge. in no. 91-3187 the uni...</td>\n",
       "      <td>0.328425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>2830</td>\n",
       "      <td>1996</td>\n",
       "      <td>X36F13</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>JOHN C</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1996-12-31</td>\n",
       "      <td>PORFILIO</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>1997-03-31</td>\n",
       "      <td>51.385926</td>\n",
       "      <td>1997-06-30</td>\n",
       "      <td>51.853494</td>\n",
       "      <td>1996-09-30</td>\n",
       "      <td>1996-09-30</td>\n",
       "      <td>0.112642</td>\n",
       "      <td>john c. porfilio , circuit judge. the central...</td>\n",
       "      <td>0.359739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>2835</td>\n",
       "      <td>2001</td>\n",
       "      <td>X519BI</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>2001-10-09</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>2002-01-09</td>\n",
       "      <td>59.244898</td>\n",
       "      <td>2002-04-09</td>\n",
       "      <td>61.060251</td>\n",
       "      <td>2001-07-09</td>\n",
       "      <td>2001-07-09</td>\n",
       "      <td>-0.877279</td>\n",
       "      <td>holloway , circuit judge. defendant-appellant...</td>\n",
       "      <td>0.450312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>2836</td>\n",
       "      <td>2000</td>\n",
       "      <td>X3J03E</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>2000-12-15</td>\n",
       "      <td>HOLLOWAY</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>2001-03-15</td>\n",
       "      <td>59.462579</td>\n",
       "      <td>2001-06-15</td>\n",
       "      <td>59.715754</td>\n",
       "      <td>2000-09-15</td>\n",
       "      <td>2000-09-15</td>\n",
       "      <td>-1.581288</td>\n",
       "      <td>holloway , circuit judge. defendant/appellant...</td>\n",
       "      <td>0.440144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>2842</td>\n",
       "      <td>1999</td>\n",
       "      <td>X3F6GM</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>MURPHY</td>\n",
       "      <td>reversed</td>\n",
       "      <td>1999-12-29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>JR.</td>\n",
       "      <td>2000-03-29</td>\n",
       "      <td>60.588383</td>\n",
       "      <td>2000-06-29</td>\n",
       "      <td>60.149401</td>\n",
       "      <td>1999-09-29</td>\n",
       "      <td>1999-09-29</td>\n",
       "      <td>1.185504</td>\n",
       "      <td>murphy , circuit judge. i. introduction defen...</td>\n",
       "      <td>0.411135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>3065</td>\n",
       "      <td>1993</td>\n",
       "      <td>X30IAK</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>MORGAN</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1993-05-26</td>\n",
       "      <td>MORGAN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td>1993-08-26</td>\n",
       "      <td>51.180044</td>\n",
       "      <td>1993-11-26</td>\n",
       "      <td>50.462687</td>\n",
       "      <td>1993-02-26</td>\n",
       "      <td>1993-02-26</td>\n",
       "      <td>0.959357</td>\n",
       "      <td>morgan , senior circuit judge: appellants wer...</td>\n",
       "      <td>0.292902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>3392</td>\n",
       "      <td>1998</td>\n",
       "      <td>X40T80</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>HATCHETT</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1998-12-31</td>\n",
       "      <td>HATCHETT</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td>1999-03-31</td>\n",
       "      <td>59.528372</td>\n",
       "      <td>1999-06-30</td>\n",
       "      <td>59.856889</td>\n",
       "      <td>1998-09-30</td>\n",
       "      <td>1998-09-30</td>\n",
       "      <td>-1.595323</td>\n",
       "      <td>hatchett , chief judge: we address issues of ...</td>\n",
       "      <td>0.399229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>3400</td>\n",
       "      <td>1994</td>\n",
       "      <td>X38NGO</td>\n",
       "      <td>contentMajOp</td>\n",
       "      <td>DYER</td>\n",
       "      <td>affirmed</td>\n",
       "      <td>1994-06-22</td>\n",
       "      <td>DYER</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td>1994-09-22</td>\n",
       "      <td>52.221083</td>\n",
       "      <td>1994-12-22</td>\n",
       "      <td>52.701810</td>\n",
       "      <td>1994-03-22</td>\n",
       "      <td>1994-03-22</td>\n",
       "      <td>-2.049534</td>\n",
       "      <td>dyer , senior circuit judge: john peeples, pa...</td>\n",
       "      <td>0.297749</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20 rows × 298 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Unnamed: 0  index  year        caseid  opinion_type  judge_name  decision  \\\n",
       "0            0   2304  1993        X35807  contentMajOp  PER CURIAM  affirmed   \n",
       "1            1   2796  1992        X3AD9D  contentMajOp       LOGAN  affirmed   \n",
       "2            2   2805  1992        X3ADTB  contentMajOp       LOGAN  reversed   \n",
       "3            3   2814  1997        X37GPR  contentMajOp      JOHN C  affirmed   \n",
       "4            4   2816  1999        X4QAM7  contentMajOp    HOLLOWAY  affirmed   \n",
       "5            5   2817  1998  XN5ACRQNB5G0  contentMajOp      JOHN C  affirmed   \n",
       "6            6   2819  1991        X57EQB  contentMajOp      JOHN P  reversed   \n",
       "7            7   2820  1991        XAC38F  contentMajOp      BRORBY  affirmed   \n",
       "8            8   2821  1995        X4NT3Q  contentMajOp    HOLLOWAY  affirmed   \n",
       "9            9   2822  2000        X3FBF1  contentMajOp       TACHA  affirmed   \n",
       "10          10   2823  1998        X369TF  contentMajOp        EBEL  reversed   \n",
       "11          11   2824  2001        X50L71  contentMajOp  PAUL KELLY  reversed   \n",
       "12          12   2829  1992        X321KN  contentMajOp       LOGAN  affirmed   \n",
       "13          13   2830  1996        X36F13  contentMajOp      JOHN C  affirmed   \n",
       "14          14   2835  2001        X519BI  contentMajOp    HOLLOWAY  affirmed   \n",
       "15          15   2836  2000        X3J03E  contentMajOp    HOLLOWAY  affirmed   \n",
       "16          16   2842  1999        X3F6GM  contentMajOp      MURPHY  reversed   \n",
       "17          17   3065  1993        X30IAK  contentMajOp      MORGAN  affirmed   \n",
       "18          18   3392  1998        X40T80  contentMajOp    HATCHETT  affirmed   \n",
       "19          19   3400  1994        X38NGO  contentMajOp        DYER  affirmed   \n",
       "\n",
       "          date    Author  Affirmed    ...     suffix     month_3  length_3m  \\\n",
       "0   1993-08-04       NaN       1.0    ...             1993-11-04  49.758998   \n",
       "1   1992-11-13     LOGAN       1.0    ...        JR.  1993-02-13  52.334119   \n",
       "2   1992-12-29     LOGAN       0.0    ...        JR.  1993-03-29  50.282495   \n",
       "3   1997-02-11  PORFILIO       1.0    ...        JR.  1997-05-11  51.570342   \n",
       "4   1999-01-04  HOLLOWAY       1.0    ...        JR.  1999-04-04  59.568882   \n",
       "5   1998-02-23  PORFILIO       1.0    ...        JR.  1998-05-23  63.292860   \n",
       "6   1991-12-17     MOORE       0.0    ...        JR.  1992-03-17  50.717301   \n",
       "7   1991-12-31    BRORBY       1.0    ...        JR.  1992-03-31  49.808413   \n",
       "8   1995-10-18  HOLLOWAY       1.0    ...        JR.  1996-01-18  50.519827   \n",
       "9   2000-04-04     TACHA       1.0    ...        JR.  2000-07-04  59.489909   \n",
       "10  1998-09-18      EBEL       0.0    ...        JR.  1998-12-18  61.202553   \n",
       "11  2001-03-22     KELLY       0.0    ...        JR.  2001-06-22  60.074257   \n",
       "12  1992-02-18     LOGAN       1.0    ...        JR.  1992-05-18  49.651231   \n",
       "13  1996-12-31  PORFILIO       1.0    ...        JR.  1997-03-31  51.385926   \n",
       "14  2001-10-09  HOLLOWAY       1.0    ...        JR.  2002-01-09  59.244898   \n",
       "15  2000-12-15  HOLLOWAY       1.0    ...        JR.  2001-03-15  59.462579   \n",
       "16  1999-12-29       NaN       1.0    ...        JR.  2000-03-29  60.588383   \n",
       "17  1993-05-26    MORGAN       1.0    ...             1993-08-26  51.180044   \n",
       "18  1998-12-31  HATCHETT       1.0    ...             1999-03-31  59.528372   \n",
       "19  1994-06-22      DYER       0.0    ...             1994-09-22  52.221083   \n",
       "\n",
       "       month_6  length_6m  month_3m_b   month_3_b  length_3m_dif  \\\n",
       "0   1994-02-04  49.603455  1993-05-04  1993-05-04      -1.099144   \n",
       "1   1993-05-13  51.257239  1992-08-13  1992-08-13       1.663181   \n",
       "2   1993-06-29  51.134191  1992-09-29  1992-09-29      -3.563471   \n",
       "3   1997-08-11  51.983779  1996-11-11  1996-11-11       0.760434   \n",
       "4   1999-07-04  59.854130  1998-10-04  1998-10-04      -0.630426   \n",
       "5   1998-08-23  61.762051  1997-11-23  1997-11-23       3.591201   \n",
       "6   1992-06-17  50.744294  1991-09-17  1991-09-17       1.751541   \n",
       "7   1992-06-30  50.642475  1991-09-30  1991-09-30       0.303059   \n",
       "8   1996-04-18  51.128395  1995-07-18  1995-07-18      -0.039012   \n",
       "9   2000-10-04  59.785273  2000-01-04  2000-01-04      -1.213819   \n",
       "10  1999-03-18  60.579140  1998-06-18  1998-06-18       0.911760   \n",
       "11  2001-09-22  60.182141  2000-12-22  2000-12-22       0.675637   \n",
       "12  1992-08-18  50.409258  1991-11-18  1991-11-18      -0.972865   \n",
       "13  1997-06-30  51.853494  1996-09-30  1996-09-30       0.112642   \n",
       "14  2002-04-09  61.060251  2001-07-09  2001-07-09      -0.877279   \n",
       "15  2001-06-15  59.715754  2000-09-15  2000-09-15      -1.581288   \n",
       "16  2000-06-29  60.149401  1999-09-29  1999-09-29       1.185504   \n",
       "17  1993-11-26  50.462687  1993-02-26  1993-02-26       0.959357   \n",
       "18  1999-06-30  59.856889  1998-09-30  1998-09-30      -1.595323   \n",
       "19  1994-12-22  52.701810  1994-03-22  1994-03-22      -2.049534   \n",
       "\n",
       "                                                  txt   x_dem_p  \n",
       "0    per curiam: charo appeals his sentence for co...  0.292902  \n",
       "1    logan , circuit judge. the only issue in this...  0.328425  \n",
       "2    logan , circuit judge. defendant bernard d. r...  0.328425  \n",
       "3    john c. porfilio , circuit judge. defendant b...  0.360773  \n",
       "4    holloway , circuit judge. mr. unser brings th...  0.411135  \n",
       "5    john c. porfilio , circuit judge. these three...  0.399229  \n",
       "6    john p. moore , circuit judge. james l. norma...  0.350113  \n",
       "7    brorby , circuit judge. defendant juan dozal-...  0.350113  \n",
       "8    holloway , circuit judge. petitioner-appellan...  0.341123  \n",
       "9    tacha , circuit judge. defendant tony smith a...  0.440144  \n",
       "10   ebel , circuit judge. manuel coronado-cervant...  0.399229  \n",
       "11   paul kelly, jr. , circuit judge. defendant-ap...  0.450312  \n",
       "12   logan , circuit judge. in no. 91-3187 the uni...  0.328425  \n",
       "13   john c. porfilio , circuit judge. the central...  0.359739  \n",
       "14   holloway , circuit judge. defendant-appellant...  0.450312  \n",
       "15   holloway , circuit judge. defendant/appellant...  0.440144  \n",
       "16   murphy , circuit judge. i. introduction defen...  0.411135  \n",
       "17   morgan , senior circuit judge: appellants wer...  0.292902  \n",
       "18   hatchett , chief judge: we address issues of ...  0.399229  \n",
       "19   dyer , senior circuit judge: john peeples, pa...  0.297749  \n",
       "\n",
       "[20 rows x 298 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 8434 entries, 0 to 8433\n",
      "Columns: 298 entries, Unnamed: 0 to x_dem_p\n",
      "dtypes: float64(211), int64(61), object(26)\n",
      "memory usage: 19.2+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Unnamed: 0', 'index', 'year', 'caseid', 'opinion_type',\n",
       "       'judge_name', 'decision', 'date', 'Author', 'Affirmed',\n",
       "       'AffirmedInPart', 'Reversed', 'ReversedInPart', 'Vacated',\n",
       "       'VacatedInPart', 'Circuit', 'judgeid1', 'judgeid2', 'judgeid3',\n",
       "       'x_dem_x', 'x_republican_x', 'x_instate_ba_x', 'x_elev_x',\n",
       "       'x_unity_x', 'x_aba_x', 'x_crossa_x', 'x_pfedjdge_x',\n",
       "       'x_pindreg1_x', 'x_plawprof_x', 'x_pscab_x', 'x_pcab_x', 'x_pusa_x',\n",
       "       'x_pssenate_x', 'x_paag_x', 'x_psp_x', 'x_pslc_x', 'x_pssc_x',\n",
       "       'x_pshouse_x', 'x_psg_x', 'x_psgo_x', 'x_psenate_x', 'x_psatty_x',\n",
       "       'x_pprivate_x', 'x_pmayor_x', 'x_plocct_x', 'x_phouse_x',\n",
       "       'x_pgov_x', 'x_pda_x', 'x_pcc_x', 'x_pccoun_x', 'x_pausa_x',\n",
       "       'x_pasatty_x', 'x_pag_x', 'x_pada_x', 'x_pgovt_x', 'x_llm_sjd_x',\n",
       "       'x_protestant_x', 'x_evangelical_x', 'x_mainline_x',\n",
       "       'x_noreligion_x', 'x_catholic_x', 'x_jewish_x', 'x_black_x',\n",
       "       'x_nonwhite_x', 'x_female_x', 'x_jd_public_x', 'x_ba_public_x',\n",
       "       'x_b10s_x', 'x_b20s_x', 'x_b30s_x', 'x_b40s_x', 'x_b50s_x',\n",
       "       'x_pbank_x', 'x_pmag_x', 'x_ageon40s_x', 'x_ageon50s_x',\n",
       "       'x_ageon60s_x', 'x_ageon40orless_x', 'x_ageon70ormore_x',\n",
       "       'x_pago_x', 'x_apptoter_x', 'x_dccircuit_x', 'x_8circuit_x',\n",
       "       'x_11circuit_x', 'x_fcircuit_x', 'x_5circuit_x', 'x_1circuit_x',\n",
       "       'x_4circuit_x', 'x_9circuit_x', 'x_2circuit_x', 'x_7circuit_x',\n",
       "       'x_6circuit_x', 'x_10circuit_x', 'x_3circuit_x', 'id_x', 'x_term_x',\n",
       "       'x_circuit_x', 'x_hdem_x', 'x_hrep_x', 'x_sdem_x', 'x_srep_x',\n",
       "       'x_hother_x', 'x_sother_x', 'x_agecommi_x', 'fullname_x',\n",
       "       'lastname_x', 'firstname_x', 'middlename_x', 'suffix_x', 'x_dem_y',\n",
       "       'x_republican_y', 'x_instate_ba_y', 'x_elev_y', 'x_unity_y',\n",
       "       'x_aba_y', 'x_crossa_y', 'x_pfedjdge_y', 'x_pindreg1_y',\n",
       "       'x_plawprof_y', 'x_pscab_y', 'x_pcab_y', 'x_pusa_y', 'x_pssenate_y',\n",
       "       'x_paag_y', 'x_psp_y', 'x_pslc_y', 'x_pssc_y', 'x_pshouse_y',\n",
       "       'x_psg_y', 'x_psgo_y', 'x_psenate_y', 'x_psatty_y', 'x_pprivate_y',\n",
       "       'x_pmayor_y', 'x_plocct_y', 'x_phouse_y', 'x_pgov_y', 'x_pda_y',\n",
       "       'x_pcc_y', 'x_pccoun_y', 'x_pausa_y', 'x_pasatty_y', 'x_pag_y',\n",
       "       'x_pada_y', 'x_pgovt_y', 'x_llm_sjd_y', 'x_protestant_y',\n",
       "       'x_evangelical_y', 'x_mainline_y', 'x_noreligion_y', 'x_catholic_y',\n",
       "       'x_jewish_y', 'x_black_y', 'x_nonwhite_y', 'x_female_y',\n",
       "       'x_jd_public_y', 'x_ba_public_y', 'x_b10s_y', 'x_b20s_y',\n",
       "       'x_b30s_y', 'x_b40s_y', 'x_b50s_y', 'x_pbank_y', 'x_pmag_y',\n",
       "       'x_ageon40s_y', 'x_ageon50s_y', 'x_ageon60s_y', 'x_ageon40orless_y',\n",
       "       'x_ageon70ormore_y', 'x_pago_y', 'x_apptoter_y', 'x_dccircuit_y',\n",
       "       'x_8circuit_y', 'x_11circuit_y', 'x_fcircuit_y', 'x_5circuit_y',\n",
       "       'x_1circuit_y', 'x_4circuit_y', 'x_9circuit_y', 'x_2circuit_y',\n",
       "       'x_7circuit_y', 'x_6circuit_y', 'x_10circuit_y', 'x_3circuit_y',\n",
       "       'id_y', 'x_term_y', 'x_circuit_y', 'x_hdem_y', 'x_hrep_y',\n",
       "       'x_sdem_y', 'x_srep_y', 'x_hother_y', 'x_sother_y', 'x_agecommi_y',\n",
       "       'fullname_y', 'lastname_y', 'firstname_y', 'middlename_y',\n",
       "       'suffix_y', 'x_dem', 'x_republican', 'x_instate_ba', 'x_elev',\n",
       "       'x_unity', 'x_aba', 'x_crossa', 'x_pfedjdge', 'x_pindreg1',\n",
       "       'x_plawprof', 'x_pscab', 'x_pcab', 'x_pusa', 'x_pssenate', 'x_paag',\n",
       "       'x_psp', 'x_pslc', 'x_pssc', 'x_pshouse', 'x_psg', 'x_psgo',\n",
       "       'x_psenate', 'x_psatty', 'x_pprivate', 'x_pmayor', 'x_plocct',\n",
       "       'x_phouse', 'x_pgov', 'x_pda', 'x_pcc', 'x_pccoun', 'x_pausa',\n",
       "       'x_pasatty', 'x_pag', 'x_pada', 'x_pgovt', 'x_llm_sjd',\n",
       "       'x_protestant', 'x_evangelical', 'x_mainline', 'x_noreligion',\n",
       "       'x_catholic', 'x_jewish', 'x_black', 'x_nonwhite', 'x_female',\n",
       "       'x_jd_public', 'x_ba_public', 'x_b10s', 'x_b20s', 'x_b30s',\n",
       "       'x_b40s', 'x_b50s', 'x_pbank', 'x_pmag', 'x_ageon40s', 'x_ageon50s',\n",
       "       'x_ageon60s', 'x_ageon40orless', 'x_ageon70ormore', 'x_pago',\n",
       "       'x_apptoter', 'x_dccircuit', 'x_8circuit', 'x_11circuit',\n",
       "       'x_fcircuit', 'x_5circuit', 'x_1circuit', 'x_4circuit',\n",
       "       'x_9circuit', 'x_2circuit', 'x_7circuit', 'x_6circuit',\n",
       "       'x_10circuit', 'x_3circuit', 'id', 'x_term', 'x_circuit', 'x_hdem',\n",
       "       'x_hrep', 'x_sdem', 'x_srep', 'x_hother', 'x_sother', 'x_agecommi',\n",
       "       'fullname', 'lastname', 'firstname', 'middlename', 'suffix',\n",
       "       'month_3', 'length_3m', 'month_6', 'length_6m', 'month_3m_b',\n",
       "       'month_3_b', 'length_3m_dif', 'txt', 'x_dem_p'], dtype=object)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "# affrimed,affimed, ..., other, + txt to predict length_3m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "data_use = data[['Affirmed', 'AffirmedInPart', 'Reversed', 'ReversedInPart', 'Vacated', 'VacatedInPart','txt','length_3m_dif']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Affirmed</th>\n",
       "      <th>AffirmedInPart</th>\n",
       "      <th>Reversed</th>\n",
       "      <th>ReversedInPart</th>\n",
       "      <th>Vacated</th>\n",
       "      <th>VacatedInPart</th>\n",
       "      <th>txt</th>\n",
       "      <th>length_3m_dif</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>per curiam: charo appeals his sentence for co...</td>\n",
       "      <td>-1.099144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>logan , circuit judge. the only issue in this...</td>\n",
       "      <td>1.663181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>logan , circuit judge. defendant bernard d. r...</td>\n",
       "      <td>-3.563471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>john c. porfilio , circuit judge. defendant b...</td>\n",
       "      <td>0.760434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>holloway , circuit judge. mr. unser brings th...</td>\n",
       "      <td>-0.630426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>john c. porfilio , circuit judge. these three...</td>\n",
       "      <td>3.591201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>john p. moore , circuit judge. james l. norma...</td>\n",
       "      <td>1.751541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>brorby , circuit judge. defendant juan dozal-...</td>\n",
       "      <td>0.303059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>holloway , circuit judge. petitioner-appellan...</td>\n",
       "      <td>-0.039012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>tacha , circuit judge. defendant tony smith a...</td>\n",
       "      <td>-1.213819</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Affirmed  AffirmedInPart  Reversed  ReversedInPart  Vacated  VacatedInPart  \\\n",
       "0       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "1       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "2       0.0             0.0       1.0             0.0      0.0            0.0   \n",
       "3       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "4       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "5       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "6       0.0             0.0       0.0             0.0      1.0            0.0   \n",
       "7       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "8       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "9       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "\n",
       "                                                 txt  length_3m_dif  \n",
       "0   per curiam: charo appeals his sentence for co...      -1.099144  \n",
       "1   logan , circuit judge. the only issue in this...       1.663181  \n",
       "2   logan , circuit judge. defendant bernard d. r...      -3.563471  \n",
       "3   john c. porfilio , circuit judge. defendant b...       0.760434  \n",
       "4   holloway , circuit judge. mr. unser brings th...      -0.630426  \n",
       "5   john c. porfilio , circuit judge. these three...       3.591201  \n",
       "6   john p. moore , circuit judge. james l. norma...       1.751541  \n",
       "7   brorby , circuit judge. defendant juan dozal-...       0.303059  \n",
       "8   holloway , circuit judge. petitioner-appellan...      -0.039012  \n",
       "9   tacha , circuit judge. defendant tony smith a...      -1.213819  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_use.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "' per curiam: charo appeals his sentence for conspiracy to possess with intent to distribute cocaine and money laundering. he maintains that the district court erred in refusing to grant him a two-level reduction for acceptance of responsibility under u.s.s.g. 3e1.1(a) . he contends that he manifested acceptance of responsibility by admitting his involvement in the offense, showing remorse, and cooperating with law enforcement officials. the government responds that the district court\\'s finding that charo had not accepted responsibility for the offense conduct was not clearly erroneous. the sentencing court\\'s determination that a defendant is not entitled to a reduction for acceptance of responsibility is entitled to great deference and will not be overturned unless it is clearly erroneous. united states v. spraggins , 868 f.2d 1541, 1543 (11th cir.1989). section 3e1.1(a) requires a sentencing court to reduce the offense level by two levels \"if the defendant clearly demonstrates a recognition and affirmative acceptance of personal responsibility for his criminal conduct.\" in determining whether defendant qualifies for an acceptance of responsibility adjustment, the sentencing court may consider whether the defendant made a \"voluntary and truthful admission to authorities of involvement in the offense and related conduct.\" u.s.s.g. 3e1.1 , comment. (n. 1(c)). charo pleaded guilty to one count of conspiracy to possess with intent to distribute cocaine base and one count of money laundering. at the change of plea hearing, he admitted that from june through october of 1981, he transported cocaine base from houston, texas to mobile, alabama on several occasions. he further admitted that he transported approximately one-half a kilogram at a time. charo told the probation officer that he transported approximately one and one-half kilograms of cocaine base on four occasions. thus, the probation officer estimated that he transported four kilograms of cocaine base. at sentencing, he admitted to transporting a total of one and one-half kilograms of cocaine base. charo\\'s statement was not a truthful admission and did not show a clear acceptance of responsibility. the court, therefore, did not err in declining to grant a two-level reduction. the sentence and judgment are affirmed. '"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_use['txt'].iloc[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#create bin:\n",
    "#0: decrease\n",
    "#1: same\n",
    "#2: increase\n",
    "def create_bin(row):\n",
    "    if row['length_3m_dif']<-0.2:\n",
    "        return 0\n",
    "    elif row['length_3m_dif']>0.2:\n",
    "        return 2\n",
    "    else:\n",
    "        return 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/share/apps/python3/3.5.3/intel/lib/python3.5/site-packages/ipykernel/__main__.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  if __name__ == '__main__':\n"
     ]
    }
   ],
   "source": [
    "data_use['bin']=data_use.apply(create_bin,axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Affirmed</th>\n",
       "      <th>AffirmedInPart</th>\n",
       "      <th>Reversed</th>\n",
       "      <th>ReversedInPart</th>\n",
       "      <th>Vacated</th>\n",
       "      <th>VacatedInPart</th>\n",
       "      <th>txt</th>\n",
       "      <th>length_3m_dif</th>\n",
       "      <th>bin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>per curiam: charo appeals his sentence for co...</td>\n",
       "      <td>-1.099144</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>logan , circuit judge. the only issue in this...</td>\n",
       "      <td>1.663181</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>logan , circuit judge. defendant bernard d. r...</td>\n",
       "      <td>-3.563471</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>john c. porfilio , circuit judge. defendant b...</td>\n",
       "      <td>0.760434</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>holloway , circuit judge. mr. unser brings th...</td>\n",
       "      <td>-0.630426</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Affirmed  AffirmedInPart  Reversed  ReversedInPart  Vacated  VacatedInPart  \\\n",
       "0       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "1       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "2       0.0             0.0       1.0             0.0      0.0            0.0   \n",
       "3       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "4       1.0             0.0       0.0             0.0      0.0            0.0   \n",
       "\n",
       "                                                 txt  length_3m_dif  bin  \n",
       "0   per curiam: charo appeals his sentence for co...      -1.099144    0  \n",
       "1   logan , circuit judge. the only issue in this...       1.663181    2  \n",
       "2   logan , circuit judge. defendant bernard d. r...      -3.563471    0  \n",
       "3   john c. porfilio , circuit judge. defendant b...       0.760434    2  \n",
       "4   holloway , circuit judge. mr. unser brings th...      -0.630426    0  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_use.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#data1_attemp = data_use[['txt','length_3m_dif']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(6326, 9)\n",
      "(2108, 9)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/share/apps/python3/3.5.3/intel/lib/python3.5/site-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\n",
      "  \"This module will be removed in 0.20.\", DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.cross_validation import train_test_split\n",
    "from numpy.random import RandomState\n",
    "\n",
    "RS1 = RandomState(1)\n",
    "train_data = data_use.sample(frac = 0.75, random_state = 200)\n",
    "test_data = data_use.drop(train_data.index)\n",
    "\n",
    "x_train = train_data['txt']\n",
    "x_test = test_data['txt']\n",
    "Y_train = train_data['length_3m_dif']\n",
    "Y_test = test_data['length_3m_dif']\n",
    "\n",
    "print(train_data.shape)\n",
    "print(test_data.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 3min 19s, sys: 2.83 s, total: 3min 21s\n",
      "Wall time: 3min 21s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "\n",
    "count_vectorizer_1gram = CountVectorizer(stop_words = 'english', binary = False)\n",
    "count_vectorizer_2gram = CountVectorizer(stop_words = 'english', ngram_range = (1,2) , binary = False)\n",
    "tfid_vectorizer_1gram = TfidfVectorizer(stop_words = 'english', binary = False)\n",
    "tfid_vectorizer_2gram = TfidfVectorizer(stop_words = 'english', ngram_range= (1,2), binary = False)\n",
    "\n",
    "count_vectorizer_1gram.fit(x_train)\n",
    "count_vectorizer_2gram.fit(x_train)\n",
    "\n",
    "tfid_vectorizer_1gram.fit(x_train)\n",
    "tfid_vectorizer_2gram.fit(x_train)\n",
    "\n",
    "\n",
    "#count_vectorizer\n",
    "count_train_1gram = count_vectorizer_1gram.transform(x_train)\n",
    "count_test_1gram = count_vectorizer_1gram.transform(x_test)\n",
    "\n",
    "count_train_2gram = count_vectorizer_2gram.transform(x_train)\n",
    "count_test_2gram = count_vectorizer_2gram.transform(x_test)\n",
    "\n",
    "#tfid_vectorizer\n",
    "tf_train_1gram = tfid_vectorizer_1gram.transform(x_train)\n",
    "tf_test_1gram = tfid_vectorizer_1gram.transform(x_test)\n",
    "\n",
    "tf_train_2gram = tfid_vectorizer_2gram.transform(x_train)\n",
    "tf_test_2gram = tfid_vectorizer_2gram.transform(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "from sklearn import linear_model\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.metrics import r2_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#count 1 gram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "lr_base_count_1gram = linear_model.LinearRegression()\n",
    "lr_base_count_1gram.fit(count_train_1gram, Y_train)\n",
    "lr_base_count_1gram_pred = lr_base_count_1gram.predict(count_test_1gram)\n",
    "count_1gram_base_mae = mean_absolute_error(Y_test, lr_base_count_1gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.69964025579824"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_1gram_base_mae"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "count_1gram_base_mae_r2 = r2_score(Y_test, lr_base_count_1gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-2.8035214992717261"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_1gram_base_mae_r2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n/DmtcAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2af19529a160>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Y_test,lr_base_count_1gram_pred)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#count 2 gram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "lr_base_count_2gram = linear_model.LinearRegression()\n",
    "lr_base_count_2gram.fit(count_train_2gram, Y_train)\n",
    "lr_base_count_2gram_pred = lr_base_count_2gram.predict(count_test_2gram)\n",
    "count_2gram_base_mae = mean_absolute_error(Y_test, lr_base_count_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.7585600238429082"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_2gram_base_mae"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "count_2gram_base_mae_r2 = r2_score(Y_test, lr_base_count_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.53133179890467863"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_2gram_base_mae_r2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\ndu2U9GeSPqulEPuspM9r6eSOeD/j7lUz+xFJj5jZMXf/57wb1cmaCXx3vybhS+/W673UqqQLm567\noL4tVZ3aZmYfk/QLkt7r9QFCdz8l6VT98UEze0rSOySlPkG0mvapIMcu5mcKc+xi9OXYNUvaTjP7\nS0l/k2VbEuj78emWu1frf37XzPZqaRiq8IEfxJCOmV3U9O11kg7VHz8k6WYzO9vMNku6SNI3+ty2\nayX9tqQPufvJpu2jZjZcf/z2etue7mfb2rVPBTh2cYpy7Noo1LEzs7c2fXu9pCfyakvdNyVdZGab\nzewsSTdr6ZgVgpm90cx+uPFYS4UNeR+zRNZMD7+D3Wa2RdKCln7xf1WS3P2omd0n6UktDVd8wt0X\n+ty2P9FStcYjZiZJB9z945LeI+l3zawmaVHSx9395T63LbZ9RTh2Zna9pD+WNCrpYTM75O7jKsix\ni2tfEY5diz8ws21aGtJ5VtKv5NgWuftpM/s1Sfu0VLFzl7sfzbNNLd4saW/992GdpC+6+9fybVIy\nXGkLAIEIYkgHAEDgA0AwCHwACASBDwCBIPABIBAEPgAEgsAHgEAQ+AAQiP8GAER0XWgi6XoAAAAA\nSUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2af19462b978>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Y_test,lr_base_count_2gram_pred)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "# tfidf 1 gram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "lr_base_tfidf_1gram = linear_model.LinearRegression()\n",
    "lr_base_tfidf_1gram.fit(tf_train_1gram, Y_train)\n",
    "lr_base_tfidf_1gram_pred = lr_base_tfidf_1gram.predict(tf_test_1gram)\n",
    "tfidf_1gram_base_mae = mean_absolute_error(Y_test, lr_base_tfidf_1gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.7085882973015794"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tfidf_1gram_base_mae"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "tfidf_1gram_base_mae_r2 = r2_score(Y_test, lr_base_tfidf_1gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.37162225423885853"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tfidf_1gram_base_mae_r2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXYAAAD8CAYAAABjAo9vAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAHQhJREFUeJzt3X+Q3Hd93/Hn+1YrvFKCT4yPEK+tSKRGqqljq744btT8\nkCAWEwNWcPmRCZ1C/lBhEkpdInrCGbALqS8oTsi0nXTUQGc6OMGAzcWumii4MunUM3Z8yskIYak1\nxthew3AQH2nQ2VrdvfvH7Z729r7f3e/u97v7/bGvx4zHtz/uux997+69n31/35/3x9wdEREpjrG0\nByAiIslSYBcRKRgFdhGRglFgFxEpGAV2EZGCUWAXESkYBXYRkYJRYBcRKRgFdhGRgtmQxotedtll\nvm3btjReWkQkt06cOPE9d5/o9rxUAvu2bduYnZ1N46VFRHLLzL4V5XlKxYiIFIwCu4hIwSiwi4gU\njAK7iEjBKLCLiBRMKlUxIlIMM3M1Dh87ywsLi1w+XuHgvh3s31VNe1gjL5EZu5mNm9kXzeyMmT1p\nZv8kieOKSHbNzNU4dP8paguLOFBbWOTQ/aeYmaulPbSRl1Qq5g+Bv3D3ncC1wJMJHVdEMurwsbMs\n1pfW3LdYX+LwsbMpjUiaYqdizOxS4OeB9wC4+3ngfNzjiki2vbCw2NP9MjxJzNi3A/PAfzWzOTP7\nYzPbnMBxRSTDLh+v9HS/DE8SgX0D8I+BP3L3XcAPgan2J5nZATObNbPZ+fn5BF5WRNJ0cN8OKuXS\nmvsq5RIH9+1YvT0zV2P39HG2Tx1l9/Rx5d+HJInA/jzwvLs/1rj9RVYC/RrufsTdJ919cmKiaw8b\nEcm4/buq3PW2a6iOVzCgOl7hrrdds1oVo4ur6YmdY3f375jZc2a2w93PAm8Avh5/aCKSdft3VUPL\nGztdXFVJ5GAlVcf+AeAeM9sIPA28N6HjikhO6eJqehIJ7O5+EphM4lgiUgyXVsosLNYD75fBUksB\nERkIs97ul+QosIvIQCycWz9b73S/JEeBXUQGIqyefcxMlTEDpsAuIgMRVOcOsOSusscBU2AXkYFo\n1rmXApLq6ikzWArsIjIw+3dVWXYPfExlj4OjwC4iA6WeMsOnwC4iAxWlp4wkSzsoichANdsHhO20\npF2YkqfALiIDF9ZTptkorNlTptkorPk90h8FdhFJTT+NwjTD706BXURS02ujMM3wo9HFUxFJTa8V\nM9pnNRoFdhFJTa8VM2oFHI0Cu4ikptsuTO1UEx+NcuwikqpOuzC1O7hvx5ocO6gmPogCu4jkRvMN\n4I4HTq9u4nFJeX3iYdQrZxTYRSQ3ZuZq3Png6TU7M714rr6mMkaVM8qxi0gHM3M1dk8fZ/vUUXZP\nH0+11W4zYL8YsFFHa2WMKmcSnLGbWQmYBWru/uakjisi6cjazDcoYLdqVsaocibZVMwHgSeBVyZ4\nTBFJST+rQoPEyXe3fm9w89+LmpUxl49XqAUE8bDKmSLm4xMJ7GZ2BXAz8DvAv0nimCKSrn5nvq2B\n8tJKmR+ev0B9aSUs9zLrb//E0ElrZUwvlTNZ+1SSlKRy7J8CPgwsJ3Q8EUlZPzXjzUBZa8ywFxbr\nq0G9KWq+u1vqpWm8Ul5T+96sjR+vlFefE1Q5E/YaRcjHxw7sZvZm4LvufqLL8w6Y2ayZzc7Pz8d9\nWREZsH76qEcNxlHy3Z2e01zM9Kl3XsfJj90UOLt++cLFeWazcqb94m9R8/FJpGJ2A281s18GLgFe\naWafdfd3tz7J3Y8ARwAmJye7pctEJGXd+qgHiRoQo6wUDcuVV8crPDK1t+P3Rr0+0Gs+Pi9iB3Z3\nPwQcAjCzXwR+qz2oi0g+9bIqFODSSnlNjXmQqCtFw3Lle3ZOsHv6eMc3m6gz8aKuZNUCJZERl2RV\niFnw/WMG7gQeP+z1m8+588HTLbXrzr2PP9f1YmzUmXg/n0ryINHA7u5fAb6S5DFFZHCSrgpZCFg8\nBLDsK3nxfl7/pfrFXPlifX19RmuKpfkmUVtYxGBNiWTYTLw9uDcvnOY5uGvlqcgIS7oqpFNu2rkY\nuJsXMbu9ftSLsbWFxTUVOc3Xa76ZdOoa2V7J0z7GPFIqRmSEJVEV0l63Xi7ZuhLHVq0z7LDXqS0s\nsn3qaNdFSU3GSsqm/U3A6X6xNamFWFmiwC4ywnqpCgnKhQNrUikLi3XKY8aWTeXAni5NzdcMe30g\nclBvPjfs9bq9SRWx5FGBXWSERa0KCcuFX1IeWzfbrS87mzZuYNPGDaFBu3nMoNdPWuubVNCbUxFL\nHs19+CXlk5OTPjs7O/TXFZH1olTF7J4+3jFIt2vmtjtFl0q5xK3XVzn61W93nN33ojxm1Jcvvmrz\nAmp1vMKenRPcd6K27k3s1uurofc/fGY+VrVM0n1ozOyEu092fZ4Cu4iEaa0y6VV7VcowbNlUXv2k\n0P76YeOpNgJuawAOexPotG1fu6BeN70eo13UwK5UjIgE6qUJV5A0lpe/eK7Opo0bAl8/bDwvLCyu\nW4i1e/p47AuqaV6UVbmjiATqVmrY3kcmCwx6/nQRlEtP4oJqmhdlFdhFJFCnANSsC8+SflI/YYuW\n+ulsOYhj9EuBXUQChQWgZl141mq8ew3qJbPQfPeenROB3xN2f5B+umMmRYFdRAJ1CkzNvVCzojpe\nodrjTHjZPfTN6eEzwa3Fw+4P0uwLXx2vrLYZjnPhtBe6eCoigcIaZAEDrz3v1Z6dE0z+xKt6Glen\nlEhS+fFeu2MmRYFdREIFBaagipGmkhlLKZRQ/8ljz3LPo89SKY9hjU6SnZTHrGNKJO+LlpSKEZGe\ndJq13v2Oa1Oplln2lRz7ufpy16ButrI69vCxs6GNvtLMjydBC5REpCe9rkLNgubK09Ze7u2PR+0T\nnyatPBWRgZiZq3HbvSdTWYDUr/GIOzslcXEzrFlaEm8SCuwi0rdus9VtU0dTHN3glMy4+x3X9h3c\ng1brlksGzpoeNv2+iSiwi0hfwoLThjEL3MGoaOLM3HtJU0XZlLudesWMuCzmByUfgloJ1Je84+YZ\nRbJYX+LOB0/39feSRMuBJMQO7GZ2JfDfgB9j5cL0EXf/w7jHlf4lvY+ljJY8bzCRlBfP1dds3xd1\ngtRp45Cg5w5KEuWOF4APufvVwI3Ab5jZ1QkcV/qU9D6WMlryUqs9aB+5/6vcdu/JnvZCDSqTDFIu\nda6jjyt2YHf3b7v73zS+/n/Ak4CmhSkq4lZfMjwH9+1YueA34s7Vl9dV/nSbILW3EShZ8HncvHHD\nQD89J7pAycy2AbuAx5I8rvQmza5ykn/7d1XZvHE0Lr9t2VSmUu4tDHabIO3fVeWRqb18c/pmlkOK\nU37QpfQyrsQCu5n9CHAf8K/d/e8CHj9gZrNmNjs/H72RjvQu76vmJH2DDjyDtqk8RpTPHJs2buCu\nt/1UT6tl89C6N5HAbmZlVoL6Pe5+f9Bz3P2Iu0+6++TERPTWl9K7NLvKSTFc0uMsNmvqSx5pAVWt\nsXvSrddXV9MmJTM2hfz7DXqaIKU1yUqiKsaATwNPuvvvxx+SJCGtrnKSf789cyr39eqti4E6GbOV\nKrL7TtRWm5ctuVNfDt4Y+9du3NrT31VYh8xB/20mkUjbDfxz4JSZnWzc9xF3/x8JHFtEhuxPH3su\n7SEMzbLDnQ+eDqzbb26M3UtADls/MuxJVuzA7u7/GyKls0QkB9Jou5umF88FX09YOFdn7qM3RT5O\nltaP5DuRJiKJ6lSjPWourZTZPX2c7VNH2T19vOu5ydL6kdGoaRKRrpozzk7S2khj2Mpjxg/PX1jt\nCBll9h224jSN9SOasYsIEDzjbPerP3MlV71685BGlA4DfuSSDet643Safc/M1ULz0WmsH9GMXUSA\naDPLex59Nld92PvhhOfdw87R4WNnA89Lr+WRSdGMXUSAaDPLogf1prDZt0Ngvj0s4DvpNN5TYBcR\nYGVmqfK2FU54cK8tLHLwi0+sCe5hb4rVlNp4KLCLCLAysxyVGXkUTngTr/qSc+eDp1dvZ62Nh3Ls\nIgnI28YmYeOt9tBPvOiMzjX9rXn4tFaYhlFgF4kpSwtToug03oP7duRuo+pB6fUcZKmNh1IxIjFl\naWFKFJ3Gu39XlZ/9yVelNLJ8MYi8eGnYNGMXiSlvG5t0Gu/MXI2/efYHQx5RPjVn9J0+oaWVotOM\nXSSmvG1s0mm8dzywviGWrBV0QTXoE1oz5dXL1npJUWAXiSlrFRHdhI13z86J1SX0Eqw6XgndFan9\nk1CaKToFdpGY8raxSdh4Hz6jnc26aaZUgrTfn2aKTjl2kQRkqSIiiqDx3nbvyZBnS1MzT95aVQTB\nn9AuDykdHUaKTjN2EQGye00gS5oXP6N8QkszRacZu4gABM5EZa1mfjzKJ7Q0Fy2Zp9BbeXJy0mdn\nZ4f+uiLS2W/PnOKzjz6b9jAyb7xS5o63vn7o6TczO+Huk92ep1SMiKzSBdRoFhbrHPzCE5lbmNSU\nSGA3szeZ2Vkze8rMppI4pogMX1YXVWVRfdm544HTHZ8zM1fraXu9pMTOsZtZCfhPwC8BzwOPm9kD\n7v71uMcWGYa8NfAapLBKDgnWqe4/zR5CSczYbwCecven3f088DnglgSOKzJwaa4OzKI9OyfSHkJh\nhC1Q+tDnB5/CSSKwV4HnWm4/37hPJPPy1sBrkGbmatx3YjTf0Pq1eWMp9LGwtNaS+8AnD0O7eGpm\nB8xs1sxm5+d1gUayIW8NvAYpymbWsla5FB5CO60LGPTkIYnAXgOubLl9ReO+Ndz9iLtPuvvkxIQ+\n7kk25K2B1yCN4ptZXD/okGMPWqDUapDnO4nA/jhwlZltN7ONwLuABxI4rsjA5a2B1yCN4ptZXJ3O\nWXOFatj2eoM837EDu7tfAH4TOAY8CXze3TvXAIlkRN4aeA1StxlmUZRLxu6ffFXsjbujTAD276py\n9zuuHfrkQStPRWSVVp5GU+2xLDapktqoK0/VK0ZEVmnlaTSPTO3t6fnD7v6plgIiskoXULvbsqmc\n9hC60oxdZASFpQa08rS7q3/8R9MeQlcK7DLyRq2lQKel7nt2Tox8jn28UsYMXjwXXMr46NMvZv53\nRhdPZaS1BzlYqVgocmXM7unjgbPySnmMl+rLDD8iZEulXOq6UKv9OcP6nVHbXpEIRrGlQFgefVFB\nHSDS6tus/84osMtIG8WWAlqINBhZ+p3JTWBPq6+xFNsothQYlYVIw5al35lcBHa1VpVBGcWWAu2r\nbccr2S/fy5r2VatZ+53JRWAfxTyoDMeothTYv6vKI1N7+eb0zWx+hYrjeuVcDO5Z/J3JxU90FPOg\nMjzDXhWYNfo76o+zEtR7XYU6DLmYsY9iHlRkWC5VKqZvWV3MlYvAPop5UJFhCekqu06n3YJGVVhL\n3rTlIrCPah5UZBgWQlZYthvftJFnpm+mlM1YFkul3F8oXEphgWcUucixg/KgIoMStT9MbWGR7VNH\nC7eI6d03buUT+69Z0yYg6r+xmtF0cC5m7CIyOL3Utec5qJdLtmZmvmVTmU+98zo+sf8aYG2lUJSA\nneV0cG5m7CKDkvWGToPW/Lc2z8H4pjJ//9IF6st5DuNrbdlU5mNvef2an2vz537bvSfX/dwP7tux\nrodQuWRs3riBHyzWM/97osAuI61Tp8Os/tEOQnuqs5+0RJYtnKuvrnvZv6va9efe/maX9UDeTqkY\nGWla/Bas17RE1rWvWI/yc9+/q8rBfTu4fLzCCwuLHD52Njer3WPN2M3sMPAW4DzwDeC97r6QxMBE\nhkGL34K1ztjHc7BjUFTN4B3l557nT3NxZ+xfBv6Ru/8U8H+AQ/GHJDI8Wvy2XntvprANJ/KqtrDI\nWEj9eevPPc+f5mIFdnf/S3e/0Lj5KHBF/CGJDI8Wv60XFNCKJqj+vP3nnudPc0nm2H8d+POwB83s\ngJnNmtns/Lx2Qpds0OK39fIQuJJSMgv9uef501zXHLuZPQS8JuCh2939zxrPuR24ANwTdhx3PwIc\ngZWt8foarcgAaPHbWmELlrZsKrNp44bCVMoALLvzzembAx8LKnnMy6e5roHd3d/Y6XEzew/wZuAN\nnsYGqiKSqLCA1loHHrZvahpKBktdIk/JLDD90mn2neeSx1ibWZvZm4DfB37B3SPnV7SZtUi2tVbF\nXFopY7ZSC94MbsC64J9VlXKJW6+vct+JWu43LY+6mXXcwP4U8Arg+427HnX393X7PgV2kXxoL/mD\niyswFxbrGNluM1Ay4+53XLu6KCmPs+9WUQN7rDp2d/8Hcb5fRLItqEKmvuQsLK6UQGY5qBusBnUY\nrWspWnkqIqHyXCGzccPohrfR/ZeLSFd5KO0L8/KFZQ5+4YnctAFIkpqAiciq9jz0np0T6y465kl9\n2bnjgdMjk4Jp0oxdRID1rQRqC4vcd6LGrddXVxdw5VHzesAoUWAXESC8N8rDZ+Yjd3osj5HbN4Ai\nUWAXESBab5Ruuy3Vl3uvlBkb8DvBlgJ1p4xKOXYRAcJbCVw+XlnXxvel+lJipY6D3KipXDI+9pbX\nr94uQi17FJqxiwgQ3ulyz86JdW18N5SM8qCn2hG1j6J5uzpe4fA/u1jHHnQNobnxRtFoxi4iQHhv\nlLBFSr00BTODJDpJlUtGvaUxTLNdwMNn5rvOwjv1Vy/arF2BXURWBa3OvO3ek4HPXThXZ+6jNwHd\nm4IlEdSbG1L3m0rJc3/1Ximwi0hHnXLvTUEdIYOM2fqcennMWAaWuiTb//6llT19HpnaG23gAePt\n9u8oCuXYRaSjKLtMtW9YEmbZ11apjFfKHH77tdz99mtXSylLIdvW1Zc90rZ0M3M1dk8fZ/vUUXZP\nH1/NoY/SblmasYtIR1H7kremccJSM8baPVRfvrC85jW6zfq7pU2ibEA9ClUxsdr29ktte0WKLajd\nb1iL3+p4hUem9kbavKP53DBhx+j2fXkxlLa9IjKawurB2zfouKQ8xsK5OuObymtm6q2as/Bus/Eo\naZNRukDaiQK7iPQkLN0x+62/XdMwbGGxTqVc4tdu3Mp9J8JrxZsXL8MubsLKjDtK2mSULpB2ooun\nItKTsHrwP33sucj3N7XOwsMubn7qndfxyNTeSLnwPTsn1l28LeoF0k40YxeRnoSlNYI2i+50P7Bm\nz9G4Fzdn5mrcd6K2Jo9vwK3Xj87OSU2JBHYz+xDwe8CEu38viWOKSDaFpTtKZoFBPOz+6nilY2VN\nr4I+STjw8Jn5vo6XZ7FTMWZ2JXAT8Gz84YhI1oWlTH71Z67s6f6k0yO6cHpREjn2PwA+TLb3tRWR\nhLQvRqqOV7jrbdfwif3X9HR/0umRsAuko3bhFGLWsZvZLcBed/+gmT0DTEZJxaiOXUSSFlQ7XymX\nBvImkpbE6tjN7CHgNQEP3Q58hJU0TJQBHQAOAGzdujXKt4iIrNGpn/oorSztpu8Zu5ldA/xP4Fzj\nriuAF4Ab3P07nb5XM3YR6dUozMi7GfjKU3c/Bby65QWfIWIqRkSyL2u7DY1SP/W4VMcuIutEaaY1\nbKp6iS6xlafuvk2zdZFi6DQ7TouqXqJTSwERWSeLs+NR6qcelwK7iKyTxdlxWP288uvrKccuIusE\nbXWXhdlxnJYDo0SBXUTWUU14vimwi0ggzY7zSzl2EZGCUWAXESkYBXYRkYJRYBcRKRgFdhGRglFg\nFxEpGAV2EZGCUWAXESkYBXYRkYJRYBcRKRgFdhGRglFgFxEpGAV2EZGCUWAXESmY2IHdzD5gZmfM\n7LSZfTKJQYmISP9i9WM3sz3ALcC17v6ymb06mWGJiEi/4s7Y3w9Mu/vLAO7+3fhDEhGROOIG9tcB\nP2dmj5nZX5nZTycxKBER6V/XVIyZPQS8JuCh2xvf/yrgRuCngc+b2Wvd3QOOcwA4ALB169Y4YxYR\nkQ66BnZ3f2PYY2b2fuD+RiD/azNbBi4D5gOOcwQ4AjA5Obku8IuISDLipmJmgD0AZvY6YCPwvbiD\nEhGR/sWqigE+A3zGzL4GnAf+RVAaRkREhidWYHf388C7ExqLiIgkQCtPRUQKRoFdRKRgFNhFRApG\ngV1EpGAU2EVECkaBXUSkYBTYRUQKRoFdRKRgFNhFRApGgV1EpGAU2EVECkaBXUSkYBTYRUQKRoFd\nRKRgFNhFRApGgV1EpGAU2EVECkaBXUSkYBTYRUQKJlZgN7MbzOxxMztpZrNmdkNSAxMRkf7EnbF/\nEviou18HfLRxW0REUrQh5vd/B3hl4+tLgRdiHk9ECmRmrsbhY2d5YWGRy8crHNy3g/27qmkPq/Di\nBvZ/CzxiZr/Hyuz/Z+MPSUSKYGauxqH7T7FYXwKgtrDIoftPASi4D1jXVIyZPWRmXwv47xbg08AH\n3f1K4LbG7bDjHGjk4Wfn5+eT+xeISCYdPnZ2Nag3LdaXOHzsbEojGh1dZ+zu/sawx8zss8AvNW5+\nAfjjDsc5AhwBmJyc9N6GKSJ588LCYk/3S3LiXjx9CviFxtd7gf8b83giUhCXj1d6ul+SEzewHwA+\naWZPAP++cVtEhIP7dlApl9bcVymXOLhvR0ojGh2xLp66++OAatdFZJ3mBVJVxQxf3KoYEZFQ+3dV\nFchToJYCIiIFo8AuIlIwCuwiIgWjwC4iUjAK7CIiBWPuw18EambzwLcG+BKXAd8b4PHjyPLYINvj\ny/LYINvjy/LYINvjy9LYfsLdJ7o9KZXAPmhmNuvuk2mPI0iWxwbZHl+WxwbZHl+WxwbZHl+WxxZG\nqRgRkYJRYBcRKZiiBvYjaQ+ggyyPDbI9viyPDbI9viyPDbI9viyPLVAhc+wiIqOsqDN2EZGRVajA\nbmYfN7OvmtkTZnbczLa2PHbIzJ4ys7Nmti+FsR02szON8X3JzMYb928zs0UzO9n47z9nZWyNx1I9\nb40xvN3MTpvZsplNttyfhXMXOLbGY6mfu7bx3GFmtZbz9csZGNObGufnKTObSns87czsGTM71Thf\ns2mPJzJ3L8x/wCtbvv5XwKcbX18NPAG8AtgOfAMoDXlsNwEbGl//LvC7ja+3AV9L+byFjS3189YY\nxz8EdgBfASZb7s/CuQsbWybOXdtY7wB+K80xtI2n1DgvrwU2Ns7X1WmPq22MzwCXpT2OXv8r1Izd\n3f+u5eZm4PuNr28BPufuL7v7N1nZ+WmofeTd/S/d/ULj5qPAFcN8/U46jC3189YY35PunsmNMjuM\nLRPnLuNuAJ5y96fd/TzwOVbOm8RUqMAOYGa/Y2bPAe8F7mrcXQWea3na84370vLrwJ+33N7e+Kj3\nV2b2c2kNqqF1bFk7b0GydO5aZfXcfaCRcvuMmW1JeSxZPUetHHjIzE6YWW52iMvdRhtm9hDwmoCH\nbnf3P3P324HbzewQ8AfAe7IytsZzbgcuAPc0Hvs2sNXdv29m1wMzZvb6tk8faY1taKKML0Bmzl1W\ndBor8EfAx1kJVh8H7mbljVzC/VN3r5nZq4Evm9kZd/9faQ+qm9wFdnd/Y8Sn3sPFmWcNuLLlsSsa\n9yWq29jM7D3Am4E3eCOB5+4vAy83vj5hZt8AXgckeqGmn7ExpPMWZXwh35OJcxdiaOeuVdSxmtl/\nAf77gIfTTSrnqBfuXmv8/7tm9iVW0keZD+yFSsWY2VUtN28BTja+fgB4l5m9wsy2A1cBfz3ksb0J\n+DDwVnc/13L/hJmVGl+/tjG2p7MwNjJw3jrJwrnrIHPnzsx+vOXmrwBfS2ssDY8DV5nZdjPbCLyL\nlfOWCWa22cx+tPk1K0UGaZ+zSHI3Y+9i2sx2AEus/IG/H8DdT5vZ54Gvs5Jq+A13Xxry2P4jKxUS\nXzYzgEfd/X3AzwP/zszqwDLwPnf/2yyMLSPnDTP7FeA/ABPAUTM76e77yMC5CxtbVs5dm0+a2XWs\npGKeAf5lmoNx9wtm9pvAMVYqZD7j7qfTHFObHwO+1Pib2AD8ibv/RbpDikYrT0VECqZQqRgREVFg\nFxEpHAV2EZGCUWAXESkYBXYRkYJRYBcRKRgFdhGRglFgFxEpmP8PD+kASAEeWoUAAAAASUVORK5C\nYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2af1951c8d68>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Y_test,lr_base_tfidf_1gram_pred)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "# tfidf 2 gram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "lr_base_tfidf_2gram = linear_model.LinearRegression()\n",
    "lr_base_tfidf_2gram.fit(tf_train_2gram, Y_train)\n",
    "lr_base_tfidf_2gram_pred = lr_base_tfidf_2gram.predict(tf_test_2gram)\n",
    "tfidf_2gram_base_mae = mean_absolute_error(Y_test, lr_base_tfidf_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.4516721052128747"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tfidf_2gram_base_mae"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "tfidf_2gram_base_mae_r2 = r2_score(Y_test, lr_base_tfidf_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.072263646659945113"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tfidf_2gram_base_mae_r2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\ngg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2af16ea22c18>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Y_test,lr_base_tfidf_2gram_pred)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#using tfidf vectorizer with 2 gram. \n",
    "#try randomforest regressor, decision tree regressor, svm regressor, "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.ensemble.gradient_boosting import GradientBoostingRegressor\n",
    "\n",
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1h 13min 12s, sys: 3.78 s, total: 1h 13min 16s\n",
      "Wall time: 1h 13min 16s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "rfr = RandomForestRegressor()\n",
    "rfr.fit(tf_train_2gram, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "rfr_base_tfidf_2gram_pred = rfr.predict(tf_test_2gram)\n",
    "rfr_tfidf_2gram_base_mse = mean_squared_error(Y_test, rfr_base_tfidf_2gram_pred)\n",
    "rfr_tfidf_2gram_base_mae = mean_absolute_error(Y_test, rfr_base_tfidf_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean squared error is 4.096154207450842\n",
      "mean absolute error is 1.4104636246745632\n"
     ]
    }
   ],
   "source": [
    "print('mean squared error is {}'.format(rfr_tfidf_2gram_base_mse))\n",
    "print('mean absolute error is {}'.format(rfr_tfidf_2gram_base_mae))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 13min 8s, sys: 765 ms, total: 13min 9s\n",
      "Wall time: 13min 9s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "dtr = DecisionTreeRegressor(random_state=0)\n",
    "dtr.fit(tf_train_2gram, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "dtr_base_tfidf_2gram_pred = dtr.predict(tf_test_2gram)\n",
    "dtr_tfidf_2gram_base_mse = mean_squared_error(Y_test, dtr_base_tfidf_2gram_pred)\n",
    "dtr_tfidf_2gram_base_mae = mean_absolute_error(Y_test, dtr_base_tfidf_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean squared error is 7.100525580809923\n",
      "mean absolute error is 1.9686191620589413\n"
     ]
    }
   ],
   "source": [
    "print('mean squared error is {}'.format(dtr_tfidf_2gram_base_mse))\n",
    "print('mean absolute error is {}'.format(dtr_tfidf_2gram_base_mae))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 6min, sys: 499 ms, total: 6min 1s\n",
      "Wall time: 6min 1s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "svrr = SVR(C=1.0, epsilon=0.2)\n",
    "svrr.fit(tf_train_2gram, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "svrr_base_tfidf_2gram_pred = svrr.predict(tf_test_2gram)\n",
    "svrr_tfidf_2gram_base_mse = mean_squared_error(Y_test, svrr_base_tfidf_2gram_pred)\n",
    "svrr_tfidf_2gram_base_mae = mean_absolute_error(Y_test, svrr_base_tfidf_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean squared error is 4.011354588876976\n",
      "mean absolute error is 1.378889769516743\n"
     ]
    }
   ],
   "source": [
    "print('mean squared error is {}'.format(svrr_tfidf_2gram_base_mse))\n",
    "print('mean absolute error is {}'.format(svrr_tfidf_2gram_base_mae))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 11min 25s, sys: 2.36 s, total: 11min 27s\n",
      "Wall time: 11min 27s\n"
     ]
    }
   ],
   "source": [
    "%%time \n",
    "gbr = GradientBoostingRegressor()\n",
    "gbr.fit(tf_train_2gram, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#gradient boosting accept sparse matrix as input in \"fit\" method, but currently does not accept sparse matrix for \"predict\" method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "gbr_base_tfidf_2gram_pred = gbr.predict(tf_test_2gram.todense())\n",
    "gbr_tfidf_2gram_base_mse = mean_squared_error(Y_test, gbr_base_tfidf_2gram_pred)\n",
    "gbr_tfidf_2gram_base_mae = mean_absolute_error(Y_test, gbr_base_tfidf_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean squared error is 3.95995212045273\n",
      "mean absolute error is 1.373931526159648\n"
     ]
    }
   ],
   "source": [
    "print('mean squared error is {}'.format(gbr_tfidf_2gram_base_mse))\n",
    "print('mean absolute error is {}'.format(gbr_tfidf_2gram_base_mae))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nnCGxA0DOkNgBIGdI7ACQMyR2AMgZEjsA5AyJHQByhsQOADlDYgeAnCGxA0DOkNgBIGdI7ACQMyR2\nAMgZEjsA5AyJHQByZqBb4wFAXKamq9q596ienqlpdbmkyU3rNDFWSTqsVCKxA0i9qemqtt56WLX6\nnCSpOlPT1lsPSxLJ3QOlGACpt3Pv0ZNJvalWn9POvUcTiijdSOwAUu/pmVpPjy91JHYAqbe6XOrp\n8aWOxA4g9SY3rVOpWGh7rFQsaHLTuoQiSjcungJIveYFUrpiwiGxA8iEibEKiTwkSjEAkDOs2AHE\ngg1G8SGxAxg6NhjFi1IMgKFjg1G8SOwAho4NRvEisQMYOjYYxWugxG5mO83sITP7sZndZmblqAID\nkB9sMIrXoCv2uyS93jn3Bkn/K2nr4CEByJuJsYq2X3qBKuWSTFKlXNL2Sy/gwumQDNQV45y7s+Xb\neyV9cLBwAOQVG4ziE2WN/Y8l/UeExwMA9KHrit3MviPpVR4/uto5983Gc66WNCtpd8BxNkvaLEmj\no6N9BQsA6K5rYnfOvT3o52b2UUnvkfR7zjkXcJxdknZJ0vj4uO/zAACDGajGbmbvkvTXkn7XOXc8\nmpAAAIMYtMb+JUkvk3SXmR00s3+OICYAwAAG7Yr5jagCAQBEwwLK4sN7UbNjkh4f4kucJennQzz+\nINIcm5Tu+NIcm5Tu+NIcm5Tu+NIU22ucc6u6PSmRxD5sZrbfOTeedBxe0hyblO740hyblO740hyb\nlO740hybH2bFAEDOkNgBIGfymth3JR1AgDTHJqU7vjTHJqU7vjTHJqU7vjTH5imXNXYAWMryumIH\ngCUrV4ndzD7XmA1/yMz2mdloy8+2mtnDZnbUzDYlEJvn7HozW2NmtcYGr0Q2eQXN1U/6vDVi+JCZ\nHTGzeTMbb3k8DefOM7bGzxI/dx3xbDOzasv5encKYnpX4/w8bGZbko6nk5k9ZmaHG+drf9LxhOac\ny81/kl7e8vVfSPpy4+vzJB2SdJqktZIekVSIObZ3SlrW+PoLkr7Q+HqNpPsTPm9+sSV+3hpx/Jak\ndZK+K2m85fE0nDu/2FJx7jpi3Sbpr5KMoSOeQuO8vFbS8sb5Oi/puDpifEzSWUnH0et/uVqxO+d+\n2fLtSkm/aHz9fklfc8695Jx7VNLDkt4cc2x3OudmG9/eK+nsOF8/SEBsiZ+3RnwPOudSedfjgNhS\nce5S7s2SHnbO/cQ5d0LS17Rw3jCgXCV2STKzz5vZk5L+SNL2xsMVSU+2PO2pxmNJ6Zxdv7bxUe+/\nzOwtSQXV0Bpb2s6blzSdu1ZpPXd/3ii5fcXMzkw4lrSeo1ZO0nfM7EBj9HgmDDQrJgnd5sM7566W\ndLWZbZV0vaSPpiW2xnM6Z9f/VNKoc+4XZvYmSVNmdn7Hp4+kYotNmPg8pObcpUVQrJL+SdLntJCs\nPifpi1p4I4e/33HOVc3sV7Uw7PAh59z3kg6qm8wldtdlPnyL3Tq18qxKOqflZ2c3HotUt9i8Ztc7\n516S9FLj6wNm9oik35QU6YWafmJTTOctTHw+v5OKc+cjtnPXKmysZvYvkr415HC6SeQc9cI5V238\n78/M7DYtlI9Sn9hzVYoxs3Nbvn2/pIONr2+X9GEzO83M1ko6V9IPYo6tObv+fa5ldr2ZrTKzQuPr\n1zZi+0kaYlMKzluQNJy7AKk7d2b26pZvL5F0f1KxNPxQ0rlmttbMlkv6sBbOWyqY2Uoze1nzay00\nGSR9zkLJ3Iq9ix1mtk7SnBb+gf+ZJDnnjpjZzZIe0EKp4ePOubmYY/uSFjok7jIzSbrXOfcxSW+V\n9Fkzq0ual/Qx59wzaYgtJedNZnaJpH+QtErSHjM76JzbpBScO7/Y0nLuOvytma3XQinmMUl/mmQw\nzrlZM/uEpL1a6JD5inPuSJIxdfg1Sbc1/k0sk/Tvzrn/TDakcNh5CgA5k6tSDACAxA4AuUNiB4Cc\nIbEDQM6Q2AEgZ0jsAJAzJHYAyBkSOwDkzP8Dij6ljTLW6fIAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2af16f072470>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Y_test,gbr_base_tfidf_2gram_pred)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "# If we use all the text feature, the number of features are substaintially larger than the number of data we have\n",
    "# this causes two main problem: 1. making the model prone to overfitting\n",
    "#                               2. extremely costly to tune a model "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 3min 2s, sys: 1.93 s, total: 3min 4s\n",
      "Wall time: 3min 4s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "\n",
    "count_vectorizer_1gram = CountVectorizer(stop_words = 'english', binary = False, max_features= 50)\n",
    "count_vectorizer_2gram = CountVectorizer(stop_words = 'english', ngram_range = (1,2) , binary = False, max_features= 50)\n",
    "tfid_vectorizer_1gram = TfidfVectorizer(stop_words = 'english', binary = False, max_features= 50)\n",
    "tfid_vectorizer_2gram = TfidfVectorizer(stop_words = 'english', ngram_range= (1,2), binary = False,max_features= 50)\n",
    "\n",
    "count_vectorizer_1gram.fit(x_train)\n",
    "count_vectorizer_2gram.fit(x_train)\n",
    "\n",
    "tfid_vectorizer_1gram.fit(x_train)\n",
    "tfid_vectorizer_2gram.fit(x_train)\n",
    "\n",
    "\n",
    "#count_vectorizer\n",
    "count_train_1gram = count_vectorizer_1gram.transform(x_train)\n",
    "count_test_1gram = count_vectorizer_1gram.transform(x_test)\n",
    "\n",
    "count_train_2gram = count_vectorizer_2gram.transform(x_train)\n",
    "count_test_2gram = count_vectorizer_2gram.transform(x_test)\n",
    "\n",
    "#tfid_vectorizer\n",
    "tf_train_1gram = tfid_vectorizer_1gram.transform(x_train)\n",
    "tf_test_1gram = tfid_vectorizer_1gram.transform(x_test)\n",
    "\n",
    "tf_train_2gram = tfid_vectorizer_2gram.transform(x_train)\n",
    "tf_test_2gram = tfid_vectorizer_2gram.transform(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "#doing cross validation for gradient boosting regressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 2min 28s, sys: 49 ms, total: 2min 28s\n",
      "Wall time: 2min 28s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "gbr = GradientBoostingRegressor()\n",
    "parameters = {'n_estimators': [10, 50, 100, 200, 300], 'max_depth':[2,3,4,5], 'max_features':['auto','sqrt','log2']}\n",
    "gbr_cv = GridSearchCV(gbr, parameters)\n",
    "gbr_cv.fit(tf_train_2gram.todense(), Y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'max_depth': 2, 'max_features': 'log2', 'n_estimators': 10}"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gbr_cv.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,\n",
       "             learning_rate=0.1, loss='ls', max_depth=2,\n",
       "             max_features='sqrt', max_leaf_nodes=None,\n",
       "             min_impurity_split=1e-07, min_samples_leaf=1,\n",
       "             min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
       "             n_estimators=10, presort='auto', random_state=None,\n",
       "             subsample=1.0, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gbr_opt = GradientBoostingRegressor(max_depth= 2, max_features='sqrt', n_estimators= 10)\n",
    "gbr_opt.fit(tf_train_2gram, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "gbr_opt_tfidf_2gram_pred = gbr_opt.predict(tf_test_2gram.todense())\n",
    "gbr_opt_tfidf_2gram_mse = mean_squared_error(Y_test, gbr_opt_tfidf_2gram_pred)\n",
    "gbr_opt_tfidf_2gram_mae = mean_absolute_error(Y_test, gbr_opt_tfidf_2gram_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean squared error is 4.015572106250717\n",
      "mean absolute error is 1.3790601814139116\n"
     ]
    }
   ],
   "source": [
    "print('mean squared error is {}'.format(gbr_opt_tfidf_2gram_mse))\n",
    "print('mean absolute error is {}'.format(gbr_opt_tfidf_2gram_mae))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# we will use word embedding to featurize the text and predict sentencing length"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#use pretrain word embedding:\n",
    "import numpy as np\n",
    "def loadGloveModel(gloveFile):\n",
    "    print (\"Loading Glove Model\")\n",
    "    f = open(gloveFile,'r')\n",
    "    model = {}\n",
    "    for line in f:\n",
    "        splitLine = line.split()\n",
    "        word = splitLine[0]\n",
    "        embedding = np.array([float(val) for val in splitLine[1:]])\n",
    "        model[word] = embedding\n",
    "    print (\"Done.\",len(model),\" words loaded!\")\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "model = loadGloveModel(\"glove.42B.300d.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "print(model['obama'])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
